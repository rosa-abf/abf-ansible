---
# file: roles/file-store/tasks/deploy.yml

- name: deploy | clone repo
  git: >
    repo={{ repo }}
    version={{ branch }}
    dest={{ deploy_to }}/scm
    update=true force=true
  environment:
    GIT_SSL_NO_VERIFY: true

- name: deploy | set default rvm gemset
  shell: rvm ruby-{{ ruby_version }} do rvm --default use {{ ruby_version }}@rosa-file-store --create

- name: deploy | creates rvm gemset for deploy
  shell: rvm ruby-{{ ruby_version }} do rvm {{ ruby_version }}@rosa-file-store-deploy --create

- name: deploy | ensure rosa-file-store bundle is installed
  command: >
    rvm {{ ruby_version }}@rosa-file-store-deploy do bundle install --without test
    chdir={{ deploy_to }}/scm

- name: deploy | creates config/deploy.rb
  template: src=deploy.rb dest={{ deploy_to }}/scm/config/deploy.rb owner={{ user }}

- name: deploy | creates config/application.yml
  template: src=application.yml dest={{ deploy_to }}/scm/config/application.yml owner={{ user }}

- name: deploy | run deploy:update
  command: >
    rvm {{ ruby_version }}@rosa-file-store-deploy do bundle exec cap deploy ENV=production
    chdir={{ deploy_to }}/scm

- name: deploy | check unicorn
  shell: ps aux | grep unicorn | grep -v grep | wc -l
  register: unicorn_workers

- name: deploy | run deploy:start
  command: >
    rvm {{ ruby_version }}@rosa-file-store-deploy do bundle exec cap deploy:start ENV=production
    chdir={{ deploy_to }}/scm
  when: unicorn_workers.stdout == '0'
