upstream file_store_backend {
  server unix:/tmp/file_store_unicorn.sock fail_timeout=0;
}


server {
    listen 80;
    server_name {{ file_store_domain }} {{ file_store_ips }};

    root    {{ deploy_to }}/current/public;

    location ~ ^/(assets)/  {
      gzip_static on; # to serve pre-gzipped version
      expires max;
      add_header Cache-Control private;
    }

    try_files $uri/index.html $uri.html $uri @myapp;

    location @myapp {
      proxy_set_header    Host              $http_host;
      proxy_set_header    X-Forwarded-For   $proxy_add_x_forwarded_for;
      proxy_set_header    X-Forwarded-Proto $scheme;
      proxy_read_timeout  350;
      proxy_send_timeout  200;
      proxy_redirect      off;
      #proxy_set_header    X-Sendfile-Type   X-Accel-Redirect;
      proxy_set_header    X-Accel-Mapping "{{ deploy_to }}/releases/\d{14}/uploads/=/private_files/";
      proxy_pass          http://file_store_backend;
    }

    access_log    {{ deploy_to }}/shared/log/nginx.access.log combined;
    error_log     {{ deploy_to }}/shared/log/nginx.error.log;

    error_page 500 502 504 /500.html;
    location = /500.html {
      root    {{ deploy_to }}/current/public;
    }


    # This allows people to use images and css in their maintenance.html file
    if ($request_filename ~* \.(css|jpg|gif|png)$) {
        break;
    }
    if (-f $document_root/system/maintenance.html) {
         #error_page 503  {{ deploy_to }}/current/public/503.html;
         return 503;
    }
    error_page 503  @maintenance;
    location @maintenance {
       root    {{ deploy_to }}/current/public;
       rewrite  ^(.*)$  /503.html break;
    }

    # Upload form should be submitted to this location
    location /api/v1/upload {
        # Pass altered request body to this location
        upload_pass   @myapp;

        # Store files to this directory
        # The directory is hashed, subdirectories 0 1 2 3 4 5 6 7 8 9 should exist
        upload_store {{ upload_store }}/tmp 1;
        
        # Allow uploaded files to be read only by user
        upload_store_access user:r all:rw;

        # Set specified fields in request body
        upload_set_form_field file[name] "$upload_file_name";
        upload_set_form_field file[content_type] "$upload_content_type";
        upload_set_form_field file[path] "$upload_tmp_path";

        # Inform backend about hash and size of a file
        upload_aggregate_form_field file[sha1] "$upload_file_sha1";
        upload_aggregate_form_field file[size] "$upload_file_size";

        upload_pass_form_field "^submit$|^description$";

        upload_cleanup 400 404 499 500-505;
    }
    
    # send file
    location /private_files/ {
      alias {{ deploy_to }}/current/uploads/;
      internal;
    }
}

